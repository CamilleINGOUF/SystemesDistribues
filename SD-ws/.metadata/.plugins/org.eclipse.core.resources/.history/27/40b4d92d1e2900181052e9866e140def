package chat.impl;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Scanner;

import org.omg.CORBA.ORB;
import org.omg.PortableServer.POA;
import org.omg.PortableServer.POAHelper;

import chat.ChatClient;
import chat.ChatClientHelper;
import chat.ChatClientPOA;
import chat.ChatServer;
import chat.ChatServerHelper;
import chat.Message;

public class Client extends ChatClientPOA {

	private String name;
	private ORB orb;
	private ChatClient cref;
	
	private ChatServer server;

	public Client(String name, String[] args) 
	{
		try {
			this.name = name;

			orb = ORB.init(args, null);
			Thread orbThread = new Thread(new Runnable() {
				@Override
				public void run() 
				{
					orb.run();
				}
			});
			orbThread.start();

			POA rootPOA = POAHelper.narrow(orb.resolve_initial_references("RootPOA"));
			rootPOA.the_POAManager().activate();
			org.omg.CORBA.Object ref = rootPOA.servant_to_reference(this);
			cref = ChatClientHelper.narrow(ref);
			
			BufferedReader br = new BufferedReader(new FileReader("server_ior.txt"));
			String ior = br.readLine();
			br.close();
			
			org.omg.CORBA.Object o = orb.string_to_object(ior);
			server = ChatServerHelper.narrow(o);
			server.register(cref);
			
			Scanner in = new Scanner(System.in);
			
			while(true)
			{
				System.out.println("> ");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public String getName() 
	{
		return name;
	}

	@Override
	public void updateClientList() 
	{
		System.out.println("update clientList.");
	}

	@Override
	public void printMessage(Message message)
	{
		System.out.println(message);
	}
}
